# https://blog.kritner.com/2021/11/29/cicd-for-net6-with-github-actions/

name: CICD

# Controls when the workflow will run
on: [push]
  # Triggers the workflow on push or pull request events but only for the "master" branch
  #push:
  #  branches: [ "master" ]
  #pull_request:
  #  branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
         
      - name: Setup .NET
        uses: actions/setup-dotnet@v2.1.0
        with:
          dotnet-version: 6.0.x
          
      - name: Restore dependencies
        run: dotnet restore
    
      - name: Build
        run: dotnet build -c Release --no-restore

      - name: Test
        run: dotnet test -c Release --no-build --verbosity normal --filter "Category!=LongRunning" /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=lcov

      - name: Publish coverage report to coveralls.io   
        uses: coverallsapp/github-action@master   
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }} 
          path-to-lcov: OFX-Tool/OFX-Tool.Test/TestResults/coverage.info

      #- name: Pack
      #  run: dotnet pack src/Orleans.SyncWork/Orleans.SyncWork.csproj -c Release --no-restore --no-build --include-symbols -p:SymbolPackageFormat=snupkg -o .

      #- name: Push to NuGet
      #  run: dotnet nuget push *.nupkg --skip-duplicate -s https://api.nuget.org/v3/index.json -k ${{secrets.NUGET_API_KEY}}
